---

# A workaround of blocking default Jenkins 2.0 administrative password

- name: 'Check if the default administrative password file exists'
  become: True
  stat:
    path: "{{ jenkins_default_adm_passd_file }}"
  register: 'jenkins_administrative_password_file_test'
  changed_when: False


- name: 'Add environment variable on Jenkins startup'
  become: True
  lineinfile:
    dest: '/etc/init.d/jenkins'
    line: 'DAEMON_ARGS="$DAEMON_ARGS --env=jenkins.install.state=INITIAL_SETUP_COMPLETED"'
    state: 'present'
    insertafter: '^DAEMON_ARGS='
  notify:
    - 'Remove Jenkins 2 administrative password file'
    - 'Remove Jenkins 2 administrative password workaround'
  when:
    - "{{ jenkins_administrative_password_file_test.stat.exists is defined }}"
    - "{{ jenkins_administrative_password_file_test.stat.exists }}"


- name: 'Add start comment block to disable security and authentication'
  become: True
  lineinfile:
    dest: "{{ jenkins_etc_home_location }}/config.xml"
    line: '<!--'
    state: 'present'
    insertbefore: '^\s*<useSecurity>'
  notify:
    - 'Remove Jenkins 2 administrative password file'
    - 'Remove Jenkins 2 administrative password workaround'
  when:
    - "{{ jenkins_administrative_password_file_test.stat.exists is defined }}"
    - "{{ jenkins_administrative_password_file_test.stat.exists }}"


- name: 'Add end comment block to disable security and authentication'
  become: True
  lineinfile:
    dest: "{{ jenkins_etc_home_location }}/config.xml"
    line: '-->'
    state: 'present'
    insertafter: '^\s*</securityRealm>'
  notify:
    - 'Remove Jenkins 2 administrative password file'
    - 'Remove Jenkins 2 administrative password workaround'
  when:
    - "{{ jenkins_administrative_password_file_test.stat.exists is defined }}"
    - "{{ jenkins_administrative_password_file_test.stat.exists }}"


- name: 'Restart jenkins to apply the workarround'
  include: "{{ role_path }}/handlers/restart_and_waiting_jenkins.yml"
  notify:
    - 'Remove Jenkins 2 administrative password file'
    - 'Remove Jenkins 2 administrative password workaround'
  when:
    - "{{ jenkins_administrative_password_file_test.stat.exists is defined }}"
    - "{{ jenkins_administrative_password_file_test.stat.exists }}"
